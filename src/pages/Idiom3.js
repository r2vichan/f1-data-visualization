 
import React, {useEffect, useState} from 'react';
import * as d3 from "d3";
import './Idiom3Resources/Idiom3.css';
import PartReliabilityModal from '../components/PartReliabilityModal';

import f1Side from './Idiom3Resources/baseImg/f1SideBG.png';  
import f1Top from './Idiom3Resources/baseImg/f1TopBG.png';  

import brakesTopOverlay from './Idiom3Resources/overlayImg/brakesTop.png';  
import differentialTopOverlay from './Idiom3Resources/overlayImg/differentialTop.png';  
import engineSideOverlay from './Idiom3Resources/overlayImg/engineSide.png';  
import hydraulicsTopOverlay from './Idiom3Resources/overlayImg/hydraulicsTop.png';  
import radiatorTopOverlay from './Idiom3Resources/overlayImg/radiatorTop.png';  
import throttleSideOverlay from './Idiom3Resources/overlayImg/throttleSide.png';  
import transmissionSideOverlay from './Idiom3Resources/overlayImg/transmissionSide.png';  
import wheelSideOverlay from './Idiom3Resources/overlayImg/wheelSide.png';  

import brakesToolTip from './Idiom3Resources/tooltipImg/brakes.jpg';  
import differentialToolTip from './Idiom3Resources/tooltipImg/differential.jpg';  
import electronicsToolTip from './Idiom3Resources/tooltipImg/electronics.webp';  
import engineToolTip from './Idiom3Resources/tooltipImg/engine.jpg';  
import hydraulicsToolTip from './Idiom3Resources/tooltipImg/hydraulics.jpg';  
import radiatorToolTip from './Idiom3Resources/tooltipImg/radiator.jpg';  
import throttleToolTip from './Idiom3Resources/tooltipImg/throttle.gif';  
import transmissionToolTip from './Idiom3Resources/tooltipImg/transmission.gif';  
import wheelToolTip from './Idiom3Resources/tooltipImg/wheel.jpg';  

const PARTS_INFO_MAP = {
  "Throttle" : {
      overlayImage : throttleSideOverlay,
      overlayId : "carSideOverlay",
      tooltipTop : "2%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>throttle</span> governs how much air and fuel are supplied to the engine, effectively controlling the car's acceleration and speed.",
      tooltipImage : throttleToolTip
  },
  "Brakes" : {
      overlayImage : brakesTopOverlay,
      overlayId : "carTopOverlay",
      tooltipTop : "2%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>brakes</span> are designed to slow the car down as quickly and efficiently as possible and are crucial to navigate corners and control speed during a race.",
      tooltipImage : brakesToolTip
  },
  "Differential" : {
      overlayImage : differentialTopOverlay,
      overlayId : "carTopOverlay",
      tooltipTop : "63%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>differential</span> manages the distribution of power from the engine to the rear wheels. It is vital for handling and performance, especially in corners.",
      tooltipImage : differentialToolTip
  },
  "Engine" : {
      overlayImage : engineSideOverlay,
      overlayId : "carSideOverlay",
      tooltipTop : "63%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>engine</span> is an advanced and meticulously engineered hybrid power unit that powers the car efficiently.",
      tooltipImage : engineToolTip
  },
  "Hydraulics" : {
      overlayImage : hydraulicsTopOverlay,
      overlayId : "carTopOverlay",
      tooltipTop : "63%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>hydraulic system</span> enables precise and rapid adjustments to critical systems that help optimize performance, handling and efficiency on the track.",
      tooltipImage : hydraulicsToolTip
  },
  "Radiator" : {
      overlayImage : radiatorTopOverlay,
      overlayId : "carTopOverlay",
      tooltipTop : "63%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>radiator</span> helps dissipate the heat generated by the car's engine and hybrid power unit during operation and is critical for preserving performance.",
      tooltipImage : radiatorToolTip
  },
  "Transmission" : {
      overlayImage : transmissionSideOverlay,
      overlayId : "carSideOverlay",
      tooltipTop : "63%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>transmission</span> transfers engine power to the wheels while allowing the driver to adjust the car's speed and torque for varying track conditions.",
      tooltipImage : transmissionToolTip
  },
  "Wheel" : {
      overlayImage : wheelSideOverlay,
      overlayId : "carSideOverlay",
      tooltipTop : "63%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>wheel</span> connects the tires to the car's suspension system and supports the power, steering and braking systems. It is durable, yet light and aerodynamic.",
      tooltipImage : wheelToolTip
  },
  "Electronics" : {
      overlayImage : hydraulicsTopOverlay,
      overlayId : "carTopOverlay",
      tooltipTop : "63%",
      tooltipLeft : "10%",
      tootltipText : "The <span style='color:white;'>electronics system</span> manages and monitors the car's critical systems. It is essential for maintaining peak performance and identifying potental failures.",
      tooltipImage : electronicsToolTip
  }
}

var PART_NAME_STATE = null
var SET_PART_NAME_STATE = null
var IS_PART_RELIABILITY_MODAL_VISIBLE_STATE = null
var SET_IS_PART_RELIABILITY_MODAL_VISIBLE_STATE = null

function addHoverCircle(svgId, x, y, partInfoMapKey) {
  let myCircle = d3.select("#"+svgId).append("circle")
      .classed("hoverCircle", true)
      .attr("cx", x)
      .attr("cy", y)
      .attr("r", 5)
      .style("fill-opacity", "0")
      .style("stroke","#7ef4cc")
      .attr("stroke-width", 3)    
      .style("cursor", "pointer")
  
  d3.select("#"+svgId).append("circle")
      .attr("cx", x)
      .attr("cy", y)
      .attr("r", 10)
      .style("fill-opacity", "0")
      .style("cursor", "pointer")
      .on("mouseover", () => {
          onHover(PARTS_INFO_MAP[partInfoMapKey])
      })
      .on("mouseout", () => {
          onHoverExit(PARTS_INFO_MAP[partInfoMapKey])
      })
      .on("click", () => {
          SET_PART_NAME_STATE(partInfoMapKey)
          SET_IS_PART_RELIABILITY_MODAL_VISIBLE_STATE(true)
      })
  
  d3.interval(() => pulse(myCircle), 100)

  function pulse(circle) {
      circle.transition()
      .duration(1)
      .attr("r", (parseInt(circle.attr("r")) + 1) % 11)	
  }
}

function onHover(partInfoMap) {
  document.getElementById("carSideBaseImg").style.opacity = "30%"
  document.getElementById("carTopBaseImg").style.opacity = "30%"

  d3.selectAll(".hoverCircle").style("opacity", 0)
  
  const overlayImage = document.getElementById(partInfoMap["overlayId"])
  overlayImage.src = partInfoMap["overlayImage"]
  overlayImage.style.opacity = "100%"

  document.getElementById("tooltipPartImage").src = partInfoMap["tooltipImage"]
  document.getElementById("tooltipPartText").innerHTML = partInfoMap["tootltipText"]

  const hoverTooltipDiv = document.getElementById("idiom3HoverToolTipDiv")
  hoverTooltipDiv.style.top = partInfoMap["tooltipTop"]
  hoverTooltipDiv.style.left = partInfoMap["tooltipLeft"]
  hoverTooltipDiv.style.opacity = "100%"
}

function onHoverExit(partInfoMap) {
  document.getElementById("carSideBaseImg").style.opacity = "100%"
  document.getElementById("carTopBaseImg").style.opacity = "100%"

  d3.selectAll(".hoverCircle").style("opacity", 100)

  const overlayImage = document.getElementById(partInfoMap["overlayId"])
  overlayImage.style.opacity = "0%"

  document.getElementById("idiom3HoverToolTipDiv").style.opacity = "0%"
}

function Idiom3() {
  const [partNameState, setPartNameState] = useState("Engine")
  const [isPartReliabilityModalVisibleState, setIsPartReliabilityModalVisibleState] = useState(false)

  PART_NAME_STATE = partNameState
  SET_PART_NAME_STATE = setPartNameState
  IS_PART_RELIABILITY_MODAL_VISIBLE_STATE = isPartReliabilityModalVisibleState
  SET_IS_PART_RELIABILITY_MODAL_VISIBLE_STATE = setIsPartReliabilityModalVisibleState

  useEffect(() => {
    const sideViewSvgWidth = document.getElementById("sideViewSvg").getBoundingClientRect().width
    addHoverCircle("sideViewSvg", 0.43 * sideViewSvgWidth, 0.05 * sideViewSvgWidth, "Throttle")
    addHoverCircle("sideViewSvg", 0.35 * sideViewSvgWidth, 0.15 * sideViewSvgWidth, "Engine")
    addHoverCircle("sideViewSvg", 0.23 * sideViewSvgWidth, 0.15 * sideViewSvgWidth, "Transmission")
    addHoverCircle("sideViewSvg", 0.08 * sideViewSvgWidth, 0.14 * sideViewSvgWidth, "Wheel")

    const topViewSvgHeight = document.getElementById("topViewSvg").getBoundingClientRect().height
    addHoverCircle("topViewSvg", 0.11 * topViewSvgHeight, 0.18 * topViewSvgHeight, "Brakes")
    addHoverCircle("topViewSvg", 0.21 * topViewSvgHeight, 0.88 * topViewSvgHeight, "Differential")
    addHoverCircle("topViewSvg", 0.21 * topViewSvgHeight, 0.6 * topViewSvgHeight, "Hydraulics")
    addHoverCircle("topViewSvg", 0.11 * topViewSvgHeight, 0.44 * topViewSvgHeight, "Radiator")
    addHoverCircle("topViewSvg", 0.21 * topViewSvgHeight, 0.4 * topViewSvgHeight, "Electronics")
  }, []);
  
  return (
    <div className="idiom-container" >
      {/* <h2>Idiom 3: Car Reliability Vs Time</h2> */}
      <div style={{ height: 30 }}></div>

      <div className="idiom3Container">
          {IS_PART_RELIABILITY_MODAL_VISIBLE_STATE && <PartReliabilityModal partName={PART_NAME_STATE} triggerUnmount={() => SET_IS_PART_RELIABILITY_MODAL_VISIBLE_STATE(false)} />}

          <div id="idiom3HoverToolTipDiv" className="row"> 
                <div className="col-md-4">
                    <img id="tooltipPartImage" style={{width : "100%", height : "auto", border : "2px solid black", borderRadius : "5px"}} />
                </div>
                <div id="tooltipPartText" className="col-md-8">
                    <p></p>
                </div>
          </div>

          <div id="sideView">
              <img id="carSideBaseImg" src={f1Side} style={{width: "100%", height: "auto", position: "absolute", top: "0", left: "0"}} />
              <img id="carSideOverlay" style={{width: "100%", height: "auto", position: "absolute", top: "0", left: "0", opacity: "0%"}} />

              <svg id="sideViewSvg" style={{width: "100%", height: "auto", position: "absolute", top: "0", left: "0", zIndex: "2"}}></svg>
          </div>
          <div id="topView">
              <img id="carTopBaseImg" src={f1Top} style={{width: "auto", height: "100%", position: "absolute", top: "0", left: "0"}} />
              <img id="carTopOverlay" style={{width: "auto", height: "100%", position: "absolute", top: "0", left: "0", opacity: "0%"}} />

              <svg id="topViewSvg" style={{width: "auto", height: "100%", position: "absolute", top: "0", left: "0", zIndex: "2"}}></svg>
          </div>
      </div>
    </div>
  )
}

export default Idiom3;